name: Deploy Infra & App (Terraform + Ansible)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Provision Azure VM with Terraform
    runs-on: ubuntu-latest
    outputs:
      vm_ip: ${{ steps.tf_output.outputs.vm_ip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Write SSH public key
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > /home/runner/.ssh/id_rsa.pub
          chmod 644 /home/runner/.ssh/id_rsa.pub

      - name: Terraform Init
        run: terraform -chdir=infrastructure init

      - name: Terraform Apply
        run: terraform -chdir=infrastructure apply -auto-approve

      # Ajout : Refresh-only pour forcer la récupération de l'IP publique propagée
      - name: Terraform Refresh State
        run: terraform -chdir=infrastructure apply -refresh-only -auto-approve

      - name: Get VM Public IP
        id: tf_output
        run: |
          echo "vm_ip=$(terraform -chdir=infrastructure output -raw public_ip)" >> $GITHUB_OUTPUT

  ansible:
   name: Configure VM & Deploy App with Ansible
   needs: terraform
   runs-on: ubuntu-latest
   steps:
      - uses: actions/checkout@v4

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Create inventory file
        run: |
          echo '[filrouge]' > hosts.ini
          echo "${{ needs.terraform.outputs.vm_ip }} ansible_user=azureuser ansible_python_interpreter=/usr/bin/python3" >> hosts.ini

      - name: Afficher hosts.ini
        run: cat hosts.ini

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i hosts.ini infrastructure/ansible/playbook.yml
