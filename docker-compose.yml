services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app
      - todo_data:/app/data
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
      - ./app/config.py:/app/config.py
      - ./test-results:/app/htmlcov
    environment:
      - DATABASE_PATH=/tmp/test.db
      - FLASK_ENV=testing
    networks:
      - todo-network
    profiles:
      - testing

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - todo-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    networks:
      - todo-network
    ports:
      - "9100:9100"
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - todo-network
    restart: unless-stopped

volumes:
  todo_data:
  grafana_data:

networks:
  todo-network:
    driver: bridge
